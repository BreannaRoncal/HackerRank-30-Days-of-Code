"""
Complete the insert function in your editor so that it creates a new Node (pass data as the Node constructor 
argument) and inserts it at the tail of the linked list referenced by the head parameter. Once the new 
node is added, return the reference to the head node.

Input Format:
  The insert function has 2 parameters: a pointer to a Node named head, and an integer value, data.
  The constructor for Node has 1 parameter: an integer value for the data field.

Example Input:
  4
  2
  3
  4
  1
  
Example Output:
  2 3 4 1
"""

class Node:
    def __init__(self,data):
        self.data = data
        self.next = None 
class Solution: 
    def display(self,head):
        current = head
        while current:
            print(current.data,end=' ')
            current = current.next
        
            
    def insert(self,head,data): 
        new_node = Node(data)
        
        #check if the head is null
        if head is None:
            return new_node
        
        #Go to last node and change its next value to the new node
        current = head
        while current.next:
            current = current.next
        current.next = new_node
        return head
        
mylist= Solution()
T=int(input())
head=None
for i in range(T):
    data=int(input())
    head=mylist.insert(head,data)    
mylist.display(head); 	  
